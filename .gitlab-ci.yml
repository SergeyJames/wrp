stages:
  - build
  - test

before_script:
  linux:rel:
      - uname -a
      - apt-get update -qq && apt-get install -y cmake gcc g++ lcov
  build:linux:deb:
      - uname -a
      - apt-get update -qq && apt-get install -y cmake gcc g++ lcov
  windows:rel:
      - systeminfo
  debian:
    script:
      - uname -a


before_script:

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive
  CMAKE_LINUX_DBG: >
    -DCMAKE_CXX_FLAGS=-fsanitize=address
    -DCMAKE_CXX_FLAGS=-fsanitize=leak
    -DCMAKE_CXX_FLAGS=-g
    -DCMAKE_C_FLAGS=-fsanitize=address
    -DCMAKE_C_FLAGS=-fsanitize=leak
    -DCMAKE_C_FLAGS=-g
    -DCMAKE_EXE_LINKER_FLAGS=-fsanitize=address
    -DCMAKE_EXE_LINKER_FLAGS=-fsanitize=leak
    -DCMAKE_MODULE_LINKER_FLAGS=-fsanitize=address
    -DCMAKE_MODULE_LINKER_FLAGS=-fsanitize=leak


build:linux:rel:
    stage: build
    tags: ['linux']
    script:
        - export dir=$(pwd)
        - mkdir build install
        - cd build
        - export BUILD_TYPE=Release
        - cmake ../ -DWRP_ROOT=$dir -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        - cmake --build . --config $BUILD_TYPE --target install
        - ./bin/unit_tests
        - lcov --capture --directory . --output-file coverage.info
        - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
        - lcov --list coverage.info # debug info
    # artifacts:
    #   name: "$(eval echo $BUILD_TYPE)"
    #   expire_in: 1 hour
    #   when: always
    #   paths:
    #     - "$CI_PROJECT_DIR/output.txt"

build:linux:deb:
    stage: build
    tags: ['linux']
    script:
        - export dir=$(pwd)
        - mkdir build install
        - cd build
        - export BUILD_TYPE=Debug
        - cmake .. -DWRP_ROOT=$dir -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_BUILD_TYPE=$BUILD_TYPE $(eval echo $CMAKE_LINUX_DBG)
        - cmake --build . --config $BUILD_TYPE --target install
        - ./bin/unit_tests
        - lcov --capture --directory . --output-file coverage.info
        - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
        - lcov --list coverage.info # debug info
    # artifacts:
    #   name: "$(eval echo $BUILD_TYPE)"
    #   expire_in: 1 hour
    #   when: always
    #   paths:
    #     - "$CI_PROJECT_DIR/output.txt"

build:windows:rel:
    stage: build
    tags: ['windows']
    script:
        - SET dir=%cd%
        - mkdir build install
        - cd build
        - SET BUILD_TYPE=Release
        - cmake ../ -DWRP_ROOT=$dir -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_BUILD_TYPE=%BUILD_TYPE%
        - cmake --build . --config %BUILD_TYPE% --target install
        - .\bin\unit_tests
